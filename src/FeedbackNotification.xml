<?xml version="1.0" encoding="utf-8" ?>
<widget id="itvisors.feedbacknotification.FeedbackNotification" pluginWidget="true" needsEntityContext="true" offlineCapable="true"
        supportedPlatform="Web"
        xmlns="http://www.mendix.com/widget/1.0/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.mendix.com/widget/1.0/ ../node_modules/mendix/custom_widget.xsd">
    <name>Feedback Notification</name>
    <description>Widget used to add notifications to your application. Based on https://github.com/fkhadra/react-toastify</description>
    <icon/>
    <properties>
        <propertyGroup caption="General">
            <property key="datasourceNotifications" type="datasource" isList="true" required="true">
                <caption>Data source</caption>
                <description />
            </property>
            <property key="headerText" type="expression" dataSource="datasourceNotifications" required="false">
                <caption>Header Text</caption>
                <description>Header text to show in the notification.</description>
                <returnType type="String"/>
            </property>
            <property key="notificationText" type="attribute" dataSource="datasourceNotifications" required="true">
                <caption>Notification Text</caption>
                <description>Detail text to show in the notification.</description>
                <attributeTypes>
                    <attributeType name="String"/>
                </attributeTypes>
            </property>
            <property key="notificationType" type="expression" dataSource="datasourceNotifications" required="true" defaultValue="'info'">
                <caption>Type</caption>
                <description>Can be used to set a type for the toast message, which will change the styling and add a icon. 
Type can be "info", "success", "warning", "error" or "default". Make sure you write it correctly.</description>
                <returnType type="String"/>
            </property>
            <property key="notificationTheme" type="expression" dataSource="datasourceNotifications" required="true" defaultValue="'light'">
                <caption>Theme</caption>
                <description>Can be used to set a theme for the toast message, which will change the styling. 
Theme can be "light", "dark" or "colored". Make sure you write it correctly.</description>
                <returnType type="String"/>
            </property>
            <property key="notificationClassName" type="expression" dataSource="datasourceNotifications" required="false">
                <caption>Class</caption>
                <description>Class to give to a specific notification.</description>
                <returnType type="String"/>
            </property>
        </propertyGroup>
        <propertyGroup caption="Actions">
            <property key="onShowAction" type="action" dataSource="datasourceNotifications" required="false">
                <caption>On Show Action</caption>
                <description>Action to trigger the notification is shown, e.g. to change and commit the object such that the notification is not shown again.</description>
            </property>
            <property key="onCloseAction" type="action" dataSource="datasourceNotifications" required="false">
                <caption>On Close Action</caption>
                <description>Action to trigger the notification is closed.</description>
            </property>
            <property key="onClickAction" type="action" dataSource="datasourceNotifications" required="false">
                <caption>On Click Action</caption>
                <description>Action to trigger when the button in the notification is clicked.</description>
            </property>
            <property key="onClickLabel" type="expression" dataSource="datasourceNotifications" required="false">
                <caption>On Click label</caption>
                <description>Label to give to on click button.</description>
                <returnType type="String"/>
            </property>
            <property key="onClickClass" type="expression" dataSource="datasourceNotifications" required="false">
                <caption>On Click Class</caption>
                <description>Class to give to on click button.</description>
                <returnType type="String"/>
            </property>
        </propertyGroup>
        <propertyGroup caption="Behavior">
            <property key="position" type="enumeration" required="true" defaultValue="topRight">
                <caption>Position</caption>
                <description>Position of the notification.</description>
                <enumerationValues>
                    <enumerationValue key="topRight">Top right</enumerationValue>
                    <enumerationValue key="topLeft">Top left</enumerationValue>
                    <enumerationValue key="topCenter">Top center</enumerationValue>
                    <enumerationValue key="bottomRight">Bottom right</enumerationValue>
                    <enumerationValue key="bottomLeft">Bottom left</enumerationValue>
                    <enumerationValue key="bottomCenter">Bottom center</enumerationValue>
                </enumerationValues>
            </property>
            <property key="transition" type="enumeration" required="true" defaultValue="Bounce">
                <caption>Transition</caption>
                <description>How the notification will pop up on the screen.</description>
                <enumerationValues>
                    <enumerationValue key="Bounce">Bounce</enumerationValue>
                    <enumerationValue key="Slide">Slide</enumerationValue>
                    <enumerationValue key="Zoom">Zoom</enumerationValue>
                    <enumerationValue key="Flip">Flip</enumerationValue>
                </enumerationValues>
            </property>
            <property key="showIcon" type="expression" dataSource="datasourceNotifications" required="true" defaultValue="true">
                <caption>Show Icon</caption>
                <description>Whether or not to show the default icons. Can be set per notification if needed.</description>
                <returnType type="Boolean"/>
            </property>
            <property key="hideProgressBar" type="boolean" required="true" defaultValue="false">
                <caption>Hide progress bar</caption>
                <description>Whether or not to show the progress bar.</description>
            </property>
            <property key="pauseOnHover" type="boolean" required="true" defaultValue="true">
                <caption>Pause on hover</caption>
                <description>Whether or not to pause the timer when hovering over the notification.</description>
            </property>
            <property key="pauseOnFocusLoss" type="boolean" required="true" defaultValue="true">
                <caption>Pause on focus loss</caption>
                <description>Whether or not to pause the timer when the window loses focus.</description>
            </property>
            <property key="rtl" type="boolean" required="true" defaultValue="false">
                <caption>Right to left</caption>
                <description>Show content right to left.</description>
            </property>
            <property key="newestOnTop" type="boolean" required="true" defaultValue="false">
                <caption>Newest on top</caption>
                <description>Show newest notification on top.</description>
            </property>
            <property key="limit" type="expression" required="true" defaultValue="0">
                <caption>Limit</caption>
                <description>Limit amount of notifications to be shown at the same time. 0 means no limit.</description>
                <returnType type="Integer"/>
            </property>
        </propertyGroup>
        <propertyGroup caption="Close notification">
            <property key="autoClose" type="expression" dataSource="datasourceNotifications" required="true" defaultValue="5000">
                <caption>Close after</caption>
                <description>Notification will be closed after this time (in ms). Set to 0 to let the user close it himself.</description>
                <returnType type="Integer"/>
            </property>
            <property key="closeButton" type="boolean" required="true" defaultValue="true">
                <caption>Close button</caption>
                <description>Whether or not to show a close button.</description>
            </property>
            <property key="closeOnClick" type="boolean" required="true" defaultValue="true">
                <caption>Close on click</caption>
                <description>Close notification when clicked.</description>
            </property>
            <property key="draggable" type="boolean" required="true" defaultValue="true">
                <caption>Draggable</caption>
                <description>Whether or not the notification can be dragged to close it.</description>
            </property>
            <property key="draggablePercent" type="integer" required="true" defaultValue="80">
                <caption>Draggable percent</caption>
                <description>The percentage of the notifications width that the notification can be dragged after which it will be closed.</description>
            </property>            
        </propertyGroup>
    </properties>
</widget>
